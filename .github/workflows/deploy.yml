name: Deploy

on:
  push:
    branches:
      - "main"

concurrency:
  group: "production"
  cancel-in-progress: false

permissions:
  id-token: write
  contents: read

env:
  AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
  AWS_REGION: "us-east-1"
  AWS_ROLE: ${{ secrets.AWS_ROLE }}
  ENVIRONMENT: production

jobs:
  build_ui:
    name: 🛠 Build UI assets
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Check out the repo
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: 🏗 Setup Yarn and Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: 🏗 Set Yarn version to Berry
        run: yarn set version berry

      - name: 📚 Install dependencies
        run: |
          yarn install --immutable

      - name: 🛠 Build UI Assets
        env:
          VITE_SHA: ${{ github.sha }}
          VITE_ENV: ${{ env.ENVIRONMENT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        run: |
          yarn build

      - name: 💾 Save UI assets to Github
        uses: actions/upload-artifact@v4
        with:
          name: ui-assets
          path: dist/*
          retention-days: 5

  tf_apply:
    name: 🏗️ Terraform Apply
    runs-on: ubuntu-latest
    outputs:
      ui_s3_bucket: ${{ fromJson(steps.tf_output.outputs.stdout).ui_s3_bucket.value }}
      cloudfront_distribution_ids: ${{ fromJson(steps.tf_output.outputs.stdout).cloudfront_distribution_ids.value }}
    steps:
      - name: 🏗 Check out the repo
        uses: actions/checkout@v4

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🏗 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.3
          terraform_wrapper: true

      - name: 🏗 Terraform Init
        working-directory: infra
        run: |
          terraform init

      - name: 🪄 Terraform Apply
        working-directory: infra
        run: |
          terraform apply \
            -var="sha=${{ github.sha }}" \
            -auto-approve

      - name: 📝 Save Terraform Output
        id: tf_output
        working-directory: infra
        run: |
          terraform output -json

  deployment:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://maingot.io
    needs:
      - build_ui
      - tf_apply
    steps:
      - name: 🏗 Check out the repo
        uses: actions/checkout@v4

      - name: ⬇️ Download UI assets from Github
        uses: actions/download-artifact@v4
        with:
          name: ui-assets
          path: ui-assets

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🚀 Upload UI assets to S3
        run: |
          aws s3 sync ui-assets s3://${{ needs.tf_apply.outputs.ui_s3_bucket }} --delete

      - name: 🧹 Invalidate Dev Cloudfront Caches
        env:
          CDN_IDS: ${{ needs.tf_apply.outputs.cloudfront_distribution_ids }}
        run: |
          IFS=',' read -r -a array <<< "$CDN_IDS"

          for distribution_id in "${array[@]}"
          do
            aws cloudfront create-invalidation \
              --distribution-id "$distribution_id" \
              --paths '/*'
            sleep 2
          done

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: ${{ env.ENVIRONMENT }}
